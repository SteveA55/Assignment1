version: 'newest'

services:
  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

    restart: always

  # Can't run docker-compose as "sudo", this will cause the following image fetch to fail.
  # "mcmasterful-books" command running as front-end.
  front-end:
    image: "ghcr.io/mcmastercce/bvd-103-mcmasterful-books/mcmasterful-books-docker:main"
    volumes:
      - ./adapter:/source/adapter
    ports:
      - "80"
    restart: always

  # Node Server 1 - for HTTP load balancing
  server:
    image: "node:20"
    volumes:
      - ./:/app
    working_dir: /app
    command: "npx -y tsx ./index.ts"

  # Node Server 2 - for HTTP load balancing
  server-two:
    image: "node:20"
    volumes:
      - ./:/app
    working_dir: /app
    command: "npx -y tsx ./index.ts"

  # Node Server 3 - for HTTP load balancing
  server-three:
    image: "node:20"
    volumes:
      - ./:/app
    working_dir: /app
    command: "npx -y tsx ./index.ts"
    # Node Orders Server
  server-orders:
    image: "node:20"
    volumes:
      - ./src/suborders:/orders
    working_dir: /orders
    command: "npx -y tsx ./index.ts"

  # Node Warehouse Server
  server-warehouse:
    image: "node:20"
    volumes:
      - ./src/subwarehouse:/warehouse
    working_dir: /warehouse
    command: "npx -y tsx ./index.ts"

  # Node Swagger Docs Server
  server-swagger:
    image: "node:20"
    volumes:
      - ./src/build:/swagger
    working_dir: /swagger
    command: "npx -y tsx ./index.ts"

  # MUST add mongo here. Mongo from inside .devcontainer was causing our "server" to fail.
  # Once we added mongo inside this docker.compose.yaml and not the one inside .devcontainer, works as expected now.
  mongo:
    image: mongo:latest

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
